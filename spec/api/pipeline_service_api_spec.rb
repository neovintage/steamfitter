=begin
#Conduit REST API

#No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

The version of the OpenAPI document: v0.1.0

Generated by: https://openapi-generator.tech
OpenAPI Generator version: 5.4.0

=end

require 'spec_helper'
require 'json'

# Unit tests for Steamfitter::PipelineServiceApi
# Automatically generated by openapi-generator (https://openapi-generator.tech)
# Please update as you see appropriate
describe 'PipelineServiceApi' do
  before do
    # run before each test
    @api_instance = Steamfitter::PipelineServiceApi.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of PipelineServiceApi' do
    it 'should create an instance of PipelineServiceApi' do
      expect(@api_instance).to be_instance_of(Steamfitter::PipelineServiceApi)
    end
  end

  # unit tests for pipeline_service_create_pipeline
  # @param body 
  # @param [Hash] opts the optional parameters
  # @return [V1Pipeline]
  describe 'pipeline_service_create_pipeline test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for pipeline_service_delete_pipeline
  # @param id 
  # @param [Hash] opts the optional parameters
  # @return [Object]
  describe 'pipeline_service_delete_pipeline test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for pipeline_service_export_pipeline
  # @param id 
  # @param [Hash] opts the optional parameters
  # @return [V1Pipeline]
  describe 'pipeline_service_export_pipeline test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for pipeline_service_get_pipeline
  # @param id 
  # @param [Hash] opts the optional parameters
  # @return [V1Pipeline]
  describe 'pipeline_service_get_pipeline test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for pipeline_service_import_pipeline
  # @param pipeline 
  # @param [Hash] opts the optional parameters
  # @return [V1Pipeline]
  describe 'pipeline_service_import_pipeline test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for pipeline_service_list_pipelines
  # @param [Hash] opts the optional parameters
  # @option opts [String] :name Regex to filter pipelines by name.
  # @return [Array<V1Pipeline>]
  describe 'pipeline_service_list_pipelines test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for pipeline_service_start_pipeline
  # @param id 
  # @param [Hash] opts the optional parameters
  # @return [Object]
  describe 'pipeline_service_start_pipeline test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for pipeline_service_stop_pipeline
  # @param id 
  # @param [Hash] opts the optional parameters
  # @return [Object]
  describe 'pipeline_service_stop_pipeline test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for pipeline_service_update_pipeline
  # @param id 
  # @param body 
  # @param [Hash] opts the optional parameters
  # @return [V1Pipeline]
  describe 'pipeline_service_update_pipeline test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

end
